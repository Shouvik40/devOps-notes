apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  labels:
    app: mongodb
spec:
  serviceName: "mongodb"  # Headless service to manage communication between pods
  replicas: 3  # Number of replicas (MongoDB nodes)
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:4.4
        ports:
        - containerPort: 27017  # MongoDB default port
          name: mongodb
        volumeMounts:
        - name: mongo-data
          mountPath: /data/db  # Mounting the volume to the MongoDB data directory
        resources:  # Optional resource requests/limits
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
      initContainers:  # Optional, can be used to initialize the setup before main container runs
      - name: init-mongo
        image: busybox
        command: ['sh', '-c', 'echo Initializing MongoDB node...']
        volumeMounts:
        - name: mongo-data
          mountPath: /data/db
  volumeClaimTemplates:  # Template for persistent volumes
  - metadata:
      name: mongo-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: standard  # Use the default or a specified storage class
      resources:
        requests:
          storage: 10Gi  # Each pod gets a 10Gi persistent volume

---

apiVersion: v1
kind: Service
metadata:
  name: mongodb
  labels:
    app: mongodb
spec:
  ports:
  - port: 27017
    name: mongodb
  clusterIP: None  # Headless service for stable network identity of StatefulSet pods
  selector:
    app: mongodb
